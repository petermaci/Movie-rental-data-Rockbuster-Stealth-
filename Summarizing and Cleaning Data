---Duplicates in film table?---

SELECT title, release_year, language_id, rental_duration,
COUNT(*)
FROM film
GROUP BY title, release_year, language_id, rental_duration
HAVING COUNT (*)>1;






---Duplicates in customer table?----

SELECT customer_id, store_id, first_name, last_name, email, address_id, COUNT (*)
FROM customer
GROUP BY customer_id, store_id, first_name, last_name, email, address_id
HAVING COUNT (*)>1;






---Summary stats for film table for numerical values---
SELECT 
MIN(release_year) AS min_release_year,
MAX(release_year) AS max_release_year,
AVG(release_year) AS avg_release_year,
MIN(rental_duration) AS min_rental_duration,
MAX (rental_duration) AS max_rental_duration,
AVG (rental_duration) AS avg_rental_duration
FROM film;


----Summary stats for non-numerical values---
SELECT mode() WITHIN GROUP (ORDER BY title) AS mode_title,
		mode () WITHIN GROUP (ORDER BY description) AS mode_description,
		mode () WITHIN GROUP (ORDER BY language_id)AS mode_language_id,
		mode () WITHIN GROUP (ORDER BY rating) AS rating
							  FROM film



-----Summary stats for customer values-------- // 
---NO MIX/MAX/AVG applicable to customer variable//---

SELECT MODE () WITHIN GROUP (ORDER BY customer_id) AS mode_customer_id,
	MODE () WITHIN GROUP (ORDER BY first_name) AS mode_first_name,
	MODE () WITHIN GROUP (ORDER BY last_name) AS mode_last_name,
	MODE () WITHIN GROUP (ORDER BY address_id) AS mode_address_id
FROM customer 











---Summary stats for customer non-numerical values----




SELECT rating,
       COUNT(film_id)
FROM film
GROUP BY rating


--------------------//// Step 2'ish for final presentation 3.10---///

SELECT COUNT (customer_id) AS count_customer_id,
COUNT (first_name) AS count_first_name,
COUNT (last_name) AS count_last_name,
COUNT (address_id) AS count_address_id,
COUNT (*) AS count_rows
FROM customer 

